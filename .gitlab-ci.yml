stages:
  - test
  - deploy
  - cleanup

default:
  before_script:
    - mkdir -p "/tmp/jobs"
    - ./.gitlab-ci.d/travis/clean.sh 'all'
    - if [ ! -d "/tmp/jobs/$(date +%j)" ]; then rm -fr "/tmp/jobs/*"; mkdir -p "/tmp/$(date +%j)"; fi
  after_script:
    - if [ -f /tmp/jobs/$(date +%j)/${CI_CONCURRENT_ID}_${CI_CONCURRENT_PROJECT_ID} ]; then bash /tmp/jobs/$(date +%j)/${CI_CONCURRENT_ID}_${CI_CONCURRENT_PROJECT_ID}; fi
    - rm -fr /tmp/jobs/$(date +%j)/${CI_CONCURRENT_ID}_${CI_CONCURRENT_PROJECT_ID}
    - ./Tests/Pipeline/Enqueue.sh ./gitlab-ci.d/wercker/build.sh --cleanup
    - ./Tests/Pipeline/Enqueue.sh ./gitlab-ci.d/wercker/kernel.sh --cleanup

perform_testing_on_linux:
  stage: test
  script:
    - if [[ ${#TASK} -gt 0 ]] && [ $TASK != 'build' ]; then exit 0; fi
    - if [[ ${#WERCKER} -eq 0 ]]; then exit 0; fi
    - ./Tests/Pipeline/Enqueue.sh $(pwd)/.gitlab-ci.d/build.sh -- --labs ${LINUX} --os linux
  tags:
    - Yggdrasil
  allow_failure: true

perform_reproducing_on_linux:
  stage: test
  script:
    - if [[ ${#TASK} -gt 0 ]] && [ $TASK != 'build' ]; then exit 0; fi
    - if [[ ${#WERCKER} -eq 0 ]]; then exit 0; fi
    - ./Tests/Pipeline/Enqueue.sh $(pwd)/.gitlab-ci.d/reproduce.sh -- --labs ${LINUX} --os linux
  tags:
    - Yggdrasil
  allow_failure: true
 
cleanup:
  stage: cleanup
  script:
    - ./Tests/Pipeline/Enqueue.sh ./gitlab-ci.d/wercker/build.sh --cleanup
    - ./Tests/Pipeline/Enqueue.sh ./gitlab-ci.d/wercker/kernel.sh --cleanup
  tags:
    - Yggdrasil
  when: on_failure

